@model MeetingEditModel
@{
    var customers = ViewBag.Customers as IEnumerable<SelectListItem>;
    var statuses = new List<SelectListItem>();
    foreach (TaskStatus item  in Enum.GetValues(typeof(TaskStatus)))
    {
        statuses.Add(new SelectListItem() { Value = item.ToString("d"), Text = item.GetStringValue() });
    }
}
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 class="modal-title">@(Model.MeetingId == 0? "Новая встреча" :"Редактирование встречи")</h3>
</div>
<!-- // Modal heading END -->
<!-- Modal body -->
<div class="modal-body">
    <div class="innerAll">
        <div class="innerLR">
            @Html.Hidden("task-cmd")
            <form id="taskTicket" class="form-horizontal" role="form" method="post" action="/Task/Meeting/Edit">
                @Html.HiddenFor(m => m.OwnerId)
                @Html.HiddenFor(m => m.MeetingId)
                @Html.HiddenFor(m => m.StatusId)
                <div class="form-group">
                    @Html.LabelFor(m => m.CustomerId, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.CustomerId, customers, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-6 control-label">Дата встречи</label>
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.Date, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Goals, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.Goals, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Comment, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.TextAreaFor(m => m.Comment, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.StatusId, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.StatusId, statuses, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Result, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.TextAreaFor(m => m.Result, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.ValidationSummary();
                    <div class="col-sm-offset-2 col-sm-10">
                        <span onclick="editMeeting();" class="btn btn-primary">@(Model.MeetingId != 0? "обновить": "создать") встречу </span>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>