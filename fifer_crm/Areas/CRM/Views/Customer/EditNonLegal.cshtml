@model CustomerEditModel
@{
    var assign = ViewBag.Assign as IEnumerable<SelectListItem>;
    var companies = ViewBag.Companies as IEnumerable<SelectListItem>;
    
    var statuses = new List<SelectListItem>();
    foreach (CustomerStatus item in Enum.GetValues(typeof(CustomerStatus)))
	{
        statuses.Add(new SelectListItem() { Text = item.GetStringValue(), Value = item.ToString("d"), Selected = Model.StatusId == (byte)item });
	}
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 class="modal-title">Клиент @(Model.CustomerId != 0 ? Model.FirstName + " " + Model.LastName: "")</h3>
</div>
<!-- // Modal heading END -->
<!-- Modal body -->
<div class="modal-body">
    <div class="innerAll">
        <div class="innerLR">
            @using (Html.BeginForm("Edit", "Customer", new { Area = "CRM" }, FormMethod.Post, new {id="nonLegalForm", @class = "form-horizontal", role = "form" }))
            {
                <input id="photoType" type="hidden" value="customer" />
                @Html.HiddenFor(m => m.CustomerId)
                @Html.HiddenFor(m => m.PhotoPath, new { @class = "photo_hidden" })
                <div class="widget widget-tabs border-bottom-none">
                    <!-- Widget heading -->
                    <div class="widget-head">
                        <ul>
                            <li class="active"><a class="glyphicons user" href="#person-data" data-toggle="tab"><i></i>Клиент</a></li>
                            <li><a class="glyphicons suitcase" href="#position-data" data-toggle="tab"><i></i>Контакты</a></li>
                            <li><a class="glyphicons asterisk" href="#additional-data" data-toggle="tab"><i></i>Дополнительно</a></li>
                        </ul>
                    </div>
                    <!-- // Widget heading END -->
                    <div class="widget-body">
                        <div class="tab-content">
                            <!-- Tab content -->
                            <div class="tab-pane active" id="person-data">
                                <div class="form-group">
                                    <img class="col-sm-3" style="max-width:150px" id="employee_img" src="@(!string.IsNullOrEmpty(Model.PhotoPath)? Model.PhotoPath : "/content/images/profile.jpg")" />
                                    <div class="col-sm-9">
                                        <div id="imageUpload">
                                            <div id="image-cropper">
                                                <div class="cropit-image-preview" style="width:150px;height:200px"></div>
                                                <div class="btns">
                                                    <input style="display:none" class="cropit-image-input custom" type='file' id='crop-uploader' />
                                                    <div style="float:left; margin-top: 19px; margin-right:10px;" class="select-image-btn btn btn-info"><span class="icon icon-image"></span>Выбрать изображение</div>
                                                </div>
                                                <br />
                                                <input style="width: 180px" type="button" class="btn btn-success" id="crop-save" value="Применить" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.FirstName, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.LastName, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Patronymic, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Patronymic, new { @class = "form-control" })
                                    </div>
                                </div>                                
                            </div>
                            <!-- // Tab content END -->
                            <div class="tab-pane" id="position-data">
                                <div class="form-group">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Phone, new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Mail, new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(m => m.Mail, new { @class = "form-control"})
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Skype, new { @class = "col-sm-3 control-label" })
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(m => m.Skype, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- // Tab content END -->
                            <div class="tab-pane" id="additional-data">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.AssignedBy, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(m => m.AssignedBy, assign, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.StatusId, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(m => m.StatusId, statuses, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Comment, new { @class = "col-sm-3 control-label" })
                                    <div class="col-sm-9">
                                        @Html.TextAreaFor(m => m.Comment, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.ValidationSummary()
                    <div class="col-sm-offset-3 col-sm-9">
                        <span onclick="editCustomerNonLegal();" class="btn btn-primary">@(Model.CustomerId != 0 ?"Обновить":"Добавить")</span>
                    </div>
                </div>
            }
        </div>

    </div>
</div>
